name: Java CI with Gradle

on:
  push:
    branches: [ "dev" ] # main브랜치에 푸시되었을 때 실행
  pull_request:
    branches: [ "dev" ] # main브랜치에 pr이 발생했을 때 실행

permissions:
  contents: read

jobs:
  # Spring Boot 애플리케이션을 빌드하여 도커허브에 푸시하는 과정
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # 1. Java 17 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      # 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew
        shell: bash

      # 2. Spring Boot 애플리케이션 빌드
      - name: Build with Gradle
        run: ./gradlew bootJar
        shell: bash

      # 3. Docker 이미지 빌드
      - name: docker image build
        run: docker build --platform linux/amd64 -t ${{ secrets.DOCKERHUB_USERNAME }}/travelog-board-action:latest .

      # 4. DockerHub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # 5. Docker Hub 이미지 빌드/푸시
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/travelog-board-action:latest

  # 7. 배포
  run-docker-image:
    needs: build-docker-image
    runs-on: self-hosted

    steps:
      - name: docker compose up
        run: |
          cd ~/01_DockerCompose
          docker compose down
          docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/travelog-board-action:latest
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/travelog-board-action:latest
          docker compose up -d
